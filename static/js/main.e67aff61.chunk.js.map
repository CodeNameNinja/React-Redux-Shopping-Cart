{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui.js","store/cart.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","id","price","item","find","quantity","totalPrice","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","sendRequest","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e67aff61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3sxAd\",\"details\":\"CartItem_details__cD-LT\",\"quantity\":\"CartItem_quantity__QLLV0\",\"price\":\"CartItem_price__1hQEq\",\"itemprice\":\"CartItem_itemprice__1JMzC\",\"actions\":\"CartItem_actions__1TkVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2eY_A\",\"price\":\"ProductItem_price__qPOg_\",\"actions\":\"ProductItem_actions__1SqDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2A4Wf\",\"error\":\"Notification_error__1B3hb\",\"success\":\"Notification_success__1vI3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1TFgu\",\"badge\":\"CartButton_badge__1VvQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1OWQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1BTUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2sbjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1VNdG\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart: (state, action) => {\r\n      state.changed = true;\r\n      const { id, price } = action.payload;\r\n      const item = state.items.find((item) => item.id === id);\r\n      if (item) {\r\n        item.quantity++;\r\n        item.totalPrice = item.totalPrice + price;\r\n      } else {\r\n        state.items.push({ ...action.payload, totalPrice: price, quantity: 1 });\r\n      }\r\n      state.totalQuantity++;\r\n    },\r\n    removeItemFromCart: (state, action) => {\r\n      state.changed = true;\r\n      const id = action.payload;\r\n      const item = state.items.find((item) => item.id === id);\r\n      if (item) {\r\n        if (item.quantity === 1) {\r\n          state.items = state.items.filter((item) => item.id !== id);\r\n        } else {\r\n          item.quantity--;\r\n          item.totalPrice = item.totalPrice - item.price;\r\n        }\r\n      }\r\n      state.totalQuantity--;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nimport uiSlice from './ui';\r\nimport cartSlice from \"./cart\";\r\nconst store = configureStore({\r\n    reducer: {ui: uiSlice.reducer, cart: cartSlice.reducer},\r\n})\r\n\r\nexport default store;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart\";\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n  const remoteItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({ title, price, id }));\n  };\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={remoteItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.title,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui\";\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const dispatch = useDispatch();\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ title, price, id }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: 1,\n    title: \"Test\",\n    price: 6,\n    description: \"This is a first product - amazing!\",\n  },\n  {\n    id: 2,\n    title: \"Test2\",\n    price: 8,\n    description: \"This is a second product - amazing!\",\n  },\n];\n\nconst Products = (props) => {\n  const products = DUMMY_PRODUCTS.map((product) => (\n    <ProductItem\n      key={product.id}\n      title={product.title}\n      price={product.price}\n      description={product.description}\n      id={product.id}\n    />\n  ));\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>{products}</ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui\";\r\nimport { cartActions } from \"./cart\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://dummymovie-96eb2-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw Error(\"Could not fetch cart data\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const cartItems = await fetchData();\r\n      dispatch(cartActions.replaceCart(cartItems));\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!\",\r\n          message: \"Cart data updated\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Something went wrong\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://dummymovie-96eb2-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!\",\r\n          message: \"Sent cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Something went wrong\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}